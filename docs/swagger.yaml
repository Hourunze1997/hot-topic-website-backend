definitions:
  app.DiscussionSourceInfo:
    properties:
      created_at:
        type: string
      id:
        type: integer
      source_closed:
        type: boolean
      source_id:
        type: string
      source_type:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  app.HotTopicsDTO:
    properties:
      topics:
        items:
          $ref: '#/definitions/app.hotTopicDTO'
        type: array
    type: object
  app.NotHotTopicsDTO:
    properties:
      topics:
        items:
          $ref: '#/definitions/app.notHotTopicDTO'
        type: array
    type: object
  app.OptionalTopic:
    properties:
      discussion:
        items:
          items:
            $ref: '#/definitions/app.DiscussionSourceInfo'
          type: array
        type: array
      summary:
        type: string
    type: object
  app.TopicsToReviewDTO:
    properties:
      cadidates:
        additionalProperties:
          items:
            $ref: '#/definitions/domain.TopicToReview'
          type: array
        type: object
      selected:
        items:
          $ref: '#/definitions/domain.TopicToReview'
        type: array
    type: object
  app.hotTopicDTO:
    properties:
      dss:
        items:
          $ref: '#/definitions/domain.DiscussionSource'
        type: array
      id:
        type: string
      order:
        type: integer
      status:
        $ref: '#/definitions/app.statusLogDTO'
      title:
        type: string
    type: object
  app.notHotTopicDTO:
    properties:
      dss:
        items:
          $ref: '#/definitions/domain.DiscussionSourceInfo'
        type: array
      title:
        type: string
    type: object
  app.statusLogDTO:
    properties:
      status:
        type: string
      time:
        type: string
    type: object
  controller.ResponseData:
    properties:
      code:
        type: string
      data: {}
      msg:
        type: string
    type: object
  controller.reqToAddSolution:
    properties:
      data:
        items:
          $ref: '#/definitions/app.OptionalTopic'
        type: array
    type: object
  controller.reqToReview:
    properties:
      data:
        items:
          $ref: '#/definitions/app.OptionalTopic'
        type: array
    type: object
  controller.reqToUpdateSelected:
    properties:
      selected:
        items:
          $ref: '#/definitions/domain.TopicToReview'
        type: array
    type: object
  domain.DiscussionSource:
    properties:
      created_at:
        type: string
      id:
        type: integer
      imported_at:
        type: string
      source_id:
        type: string
      source_type:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  domain.DiscussionSourceInfo:
    properties:
      closed:
        type: boolean
      id:
        type: integer
      title:
        type: string
      url:
        type: string
    type: object
  domain.DiscussionSourceToReview:
    properties:
      created_at:
        type: string
      id:
        type: integer
      imported_at:
        type: string
      source_closed:
        type: boolean
      source_id:
        type: string
      source_type:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  domain.TopicToReview:
    properties:
      category:
        type: string
      dss:
        items:
          $ref: '#/definitions/domain.DiscussionSourceToReview'
        type: array
      ht_id:
        description: it is not empty if the topic is the last host topic
        type: string
      order:
        type: integer
      resolved:
        type: boolean
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/hot-topic/{community}:
    get:
      consumes:
      - application/json
      description: get hot topics
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      - description: get lastest hot topics. value is true
        in: query
        name: latest
        required: true
        type: boolean
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.HotTopicsDTO'
      security:
      - Internal: []
      summary: Get
      tags:
      - HotTopic
  /v1/hot-topic/{community}/solution:
    post:
      consumes:
      - application/json
      description: add topic solution
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToAddSolution'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Add
      tags:
      - HotTopic
  /v1/not-hot-topic/{community}:
    get:
      consumes:
      - application/json
      description: get worthless hot topics
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.NotHotTopicsDTO'
      security:
      - Internal: []
      summary: Get
      tags:
      - NotHotTopic
  /v1/topic-review/{community}:
    get:
      consumes:
      - application/json
      description: get topics to review
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.TopicsToReviewDTO'
      security:
      - Internal: []
      summary: Get
      tags:
      - TopicReview
    post:
      consumes:
      - application/json
      description: upload topics to review
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToReview'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Create
      tags:
      - TopicReview
    put:
      consumes:
      - application/json
      description: update the selected topics
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/controller.reqToUpdateSelected'
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/controller.ResponseData'
      security:
      - Internal: []
      summary: Update
      tags:
      - TopicReview
  /v1/topic-review/{community}/publish:
    get:
      consumes:
      - application/json
      description: get topics to publish
      parameters:
      - description: lowercase community name, like openubmc, cann
        in: path
        name: community
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.HotTopicsDTO'
      security:
      - Internal: []
      summary: GetTopicsToPublish
      tags:
      - TopicReview
securityDefinitions:
  Internal:
    description: Type "Internal" followed by a space and internal token.
    in: header
    name: TOKEN
    type: apiKey
swagger: "2.0"
